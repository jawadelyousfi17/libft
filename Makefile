# Compiler
CC = gcc
# Compiler flags
CFLAGS = -Wall -Wextra -Werror
# Name of the static library
LIBNAME = libft.a
# Source files
SRCS = ft_isalnum.c  ft_isascii.c  ft_isprint.c  ft_memcpy.c   ft_memset.c  ft_strlcat.c  ft_strlen.c  ft_strncmp.c  ft_strrchr.c  ft_toupper.c ft_atoi.c  ft_isalpha.c  ft_isdigit.c  ft_memcmp.c   ft_memmove.c  ft_strchr.c  ft_strlcpy.c  ft_strlen.o  ft_strnstr.c  ft_tolower.c
# Object files
OBJS = $(SRCS:.c=.o)

# Default target
all: $(LIBNAME)

# Rule to create the static library
$(LIBNAME): $(OBJS)
	ar rcs $(LIBNAME) $(OBJS)

# Rule to compile each source file into an object file
%.o: %.c
	$(CC) $(CFLAGS) -c $< -o $@

# Clean up object files and the static library
clean:
	rm -f $(OBJS)

# Remove all files generated by the build process
fclean: clean
	rm -f $(LIBNAME)

# Rebuild everything
re: fclean all

.PHONY: all clean fclean re
